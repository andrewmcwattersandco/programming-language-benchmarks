name: CI

on:
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]

  workflow_dispatch:
  schedule:
      - cron:  '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/go1.18.1.linux-amd64.tar.gz
          ~/jdk-8u331-linux-x64.tar.gz
          ~/lua-5.1.5.tar.gz
          ~/LuaJIT-2.1.0-beta3.tar.gz
          ~/companyfacts.zip
        key: ${{ runner.os }}-${{ hashFiles('~/*.tar.gz', '~/*.zip') }}
        restore-keys: |
          ${{ runner.os }}-

    - name: free
      run: free

    - name: Set up Go
      run: |
        cd ~
        if [ ! -f go1.18.1.linux-amd64.tar.gz ]
        then
          curl -LO https://go.dev/dl/go1.18.1.linux-amd64.tar.gz
        fi
        sudo rm $(command -v go) && sudo tar -C /usr/local -xzf go1.18.1.linux-amd64.tar.gz
        echo 'export PATH=$PATH:/usr/local/go/bin' >> .profile
        source $HOME/.profile
        go version

    - name: Set up Java
      run: |
        cd ~
        if [ ! -f jdk-8u331-linux-x64.tar.gz ]
        then
          curl -LO https://github.com/andrewmcwattersandco/programming-language-benchmarks/releases/download/jdk-8u331-linux-x64/jdk-8u331-linux-x64.tar.gz
        fi
        sudo rm $(command -v java) && sudo tar -C /usr/local/ -xzf jdk-8u331-linux-x64.tar.gz
        echo 'export PATH=/usr/local/jdk1.8.0_331/bin:$PATH' >> .profile
        . .profile
        javac -version
        # https://docs.oracle.com/javase/8/docs/technotes/guides/vm/gctuning/parallel.html#default_heap_size
        java -XX:+PrintFlagsFinal -version | grep MaxHeapSize

    - name: Set up Lua
      run: |
        sudo apt-get update
        sudo apt-get install -y libreadline-dev
        cd ~
        if [ ! -f lua-5.1.5.tar.gz ]
        then
          curl -O https://www.lua.org/ftp/lua-5.1.5.tar.gz
        fi
        tar xzf lua-5.1.5.tar.gz
        cd lua-5.1.5
        sudo make linux install
        lua -v

    - name: Set up LuaJIT
      run: |
        cd ~
        if [ ! -f v2.1.0-beta3.tar.gz ]
        then
          curl -O https://github.com/LuaJIT/LuaJIT/archive/refs/tags/v2.1.0-beta3.tar.gz
        fi
        tar xzf v2.1.0-beta3.tar.gz
        cd LuaJIT-2.1.0-beta3
        make && sudo make install
        sudo ln -sf LuaJIT-2.1.0-beta3 /usr/local/bin/luajit
        luajit -v

    - name: Set up EDGAR API bulk data
      run: |
        cd ~
        if [ ! -f companyfacts.zip ]
        then
          curl \
            -H "User-Agent: Sample Company Name AdminContact@<sample company domain>.com" \
            -H "Accept-Encoding: gzip, deflate" \
            -H "Host: www.sec.gov" \
            -O \
            https://www.sec.gov/Archives/edgar/daily-index/xbrl/companyfacts.zip
        fi
        unzip -q companyfacts.zip -d ${{ github.workspace }}/json/companyfacts
        ls -la

    - name: bench
      run: |
        . ~/.profile
        ./bench
