#!/bin/sh
set -e

CGO_ENABLED=0

command=/usr/bin/time
options=

clean() {
    # C/C++
    rm -f a.out

    # Go
    rm -f $1

    # Java
    rm -f $(classname $1).class
}

capitalize() {
    local input
    read input
    printf $input | awk '{ print toupper(substr($0, 1, 1)) substr($0, 2) }'
}

classname() {
    echo ${1}App | capitalize
}

for d in */
do
    file=$(basename $d)
    cd $d
    echo $file

    clean $file

    # C
    cc ${file}.c
    printf " %s\t" c
    $command $options ./a.out

    # C++
    cc ${file}.cpp
    printf " %s\t" cpp
    $command $options ./a.out

    # Go
    go build ./...
    printf " %s\t" go
    $command $options ./${file}

    # Java
    javac ${file}.java
    class=$(classname $file)
    printf " %s\t" java
    $command $options java $class

    # Node
    printf " %s\t" js
    # nvm
    # sudo ln -s $(which node) /usr/local/bin/node
    $command $options node --max-old-space-size=8192 ${file}.js

    # Lua
    printf " %s\t" lua
    # macOS
    # cd /opt/homebrew/bin/
    # ln -s ../Cellar/lua@5.1/5.1.5_8/bin/lua-5.1 lua
    $command $options lua ${file}.lua

    # LuaJIT
    printf " %s\t" luajit
    $command $options luajit ${file}.lua

    cd ..
done
